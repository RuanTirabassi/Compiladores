//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.13.1
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from c:/Users/marciohenrique/Downloads/uenp/TF_Compiladores-main/LangC.g4 by ANTLR 4.13.1

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419


  namespace LangC.Grammar;

using Antlr4.Runtime.Misc;
using Antlr4.Runtime.Tree;
using IToken = Antlr4.Runtime.IToken;

/// <summary>
/// This interface defines a complete generic visitor for a parse tree produced
/// by <see cref="LangCParser"/>.
/// </summary>
/// <typeparam name="Result">The return type of the visit operation.</typeparam>
[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.13.1")]
[System.CLSCompliant(false)]
public interface ILangCVisitor<Result> : IParseTreeVisitor<Result> {
	/// <summary>
	/// Visit a parse tree produced by <see cref="LangCParser.prog"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitProg([NotNull] LangCParser.ProgContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>includeDirective</c>
	/// labeled alternative in <see cref="LangCParser.preprocessor"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitIncludeDirective([NotNull] LangCParser.IncludeDirectiveContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>defineDirective</c>
	/// labeled alternative in <see cref="LangCParser.preprocessor"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitDefineDirective([NotNull] LangCParser.DefineDirectiveContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>mainFunctionBlock</c>
	/// labeled alternative in <see cref="LangCParser.mainFunction"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitMainFunctionBlock([NotNull] LangCParser.MainFunctionBlockContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>fnWithReturn</c>
	/// labeled alternative in <see cref="LangCParser.function"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitFnWithReturn([NotNull] LangCParser.FnWithReturnContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>fnWithoutReturn</c>
	/// labeled alternative in <see cref="LangCParser.function"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitFnWithoutReturn([NotNull] LangCParser.FnWithoutReturnContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="LangCParser.line"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitLine([NotNull] LangCParser.LineContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>VariavelExistenteString</c>
	/// labeled alternative in <see cref="LangCParser.atrib"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitVariavelExistenteString([NotNull] LangCParser.VariavelExistenteStringContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>VariavelNovaString</c>
	/// labeled alternative in <see cref="LangCParser.atrib"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitVariavelNovaString([NotNull] LangCParser.VariavelNovaStringContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>VariavelNova</c>
	/// labeled alternative in <see cref="LangCParser.atrib"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitVariavelNova([NotNull] LangCParser.VariavelNovaContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>VariavelNovaFuncao</c>
	/// labeled alternative in <see cref="LangCParser.atrib"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitVariavelNovaFuncao([NotNull] LangCParser.VariavelNovaFuncaoContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>VariavelNovaBoolean</c>
	/// labeled alternative in <see cref="LangCParser.atrib"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitVariavelNovaBoolean([NotNull] LangCParser.VariavelNovaBooleanContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>VariavelExistente</c>
	/// labeled alternative in <see cref="LangCParser.atrib"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitVariavelExistente([NotNull] LangCParser.VariavelExistenteContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>VariavelExistenteBoolean</c>
	/// labeled alternative in <see cref="LangCParser.atrib"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitVariavelExistenteBoolean([NotNull] LangCParser.VariavelExistenteBooleanContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>inputVar</c>
	/// labeled alternative in <see cref="LangCParser.input"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitInputVar([NotNull] LangCParser.InputVarContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>inputStr</c>
	/// labeled alternative in <see cref="LangCParser.input"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitInputStr([NotNull] LangCParser.InputStrContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>outputStr</c>
	/// labeled alternative in <see cref="LangCParser.output"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitOutputStr([NotNull] LangCParser.OutputStrContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>outputVar</c>
	/// labeled alternative in <see cref="LangCParser.output"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitOutputVar([NotNull] LangCParser.OutputVarContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>outputExpr</c>
	/// labeled alternative in <see cref="LangCParser.output"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitOutputExpr([NotNull] LangCParser.OutputExprContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>outputStrVar</c>
	/// labeled alternative in <see cref="LangCParser.output"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitOutputStrVar([NotNull] LangCParser.OutputStrVarContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>outputStrLine</c>
	/// labeled alternative in <see cref="LangCParser.output"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitOutputStrLine([NotNull] LangCParser.OutputStrLineContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>exprSum</c>
	/// labeled alternative in <see cref="LangCParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitExprSum([NotNull] LangCParser.ExprSumContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>exprSub</c>
	/// labeled alternative in <see cref="LangCParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitExprSub([NotNull] LangCParser.ExprSubContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>exprTerm</c>
	/// labeled alternative in <see cref="LangCParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitExprTerm([NotNull] LangCParser.ExprTermContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>termMult</c>
	/// labeled alternative in <see cref="LangCParser.term"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitTermMult([NotNull] LangCParser.TermMultContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>termDiv</c>
	/// labeled alternative in <see cref="LangCParser.term"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitTermDiv([NotNull] LangCParser.TermDivContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>termMod</c>
	/// labeled alternative in <see cref="LangCParser.term"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitTermMod([NotNull] LangCParser.TermModContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>termFactor</c>
	/// labeled alternative in <see cref="LangCParser.term"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitTermFactor([NotNull] LangCParser.TermFactorContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>factorExpr</c>
	/// labeled alternative in <see cref="LangCParser.factor"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitFactorExpr([NotNull] LangCParser.FactorExprContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>factorVar</c>
	/// labeled alternative in <see cref="LangCParser.factor"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitFactorVar([NotNull] LangCParser.FactorVarContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>factorNumD</c>
	/// labeled alternative in <see cref="LangCParser.factor"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitFactorNumD([NotNull] LangCParser.FactorNumDContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>factorNum</c>
	/// labeled alternative in <see cref="LangCParser.factor"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitFactorNum([NotNull] LangCParser.FactorNumContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>factorStr</c>
	/// labeled alternative in <see cref="LangCParser.factor"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitFactorStr([NotNull] LangCParser.FactorStrContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>ifBlock</c>
	/// labeled alternative in <see cref="LangCParser.controlflow"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitIfBlock([NotNull] LangCParser.IfBlockContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>ifElseBlock</c>
	/// labeled alternative in <see cref="LangCParser.controlflow"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitIfElseBlock([NotNull] LangCParser.IfElseBlockContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>loopBlock</c>
	/// labeled alternative in <see cref="LangCParser.loop"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitLoopBlock([NotNull] LangCParser.LoopBlockContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>forLoopBlock</c>
	/// labeled alternative in <see cref="LangCParser.loop"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitForLoopBlock([NotNull] LangCParser.ForLoopBlockContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>doWhileBlock</c>
	/// labeled alternative in <see cref="LangCParser.loop"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitDoWhileBlock([NotNull] LangCParser.DoWhileBlockContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>blockLine</c>
	/// labeled alternative in <see cref="LangCParser.block"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitBlockLine([NotNull] LangCParser.BlockLineContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>fnBlockLine</c>
	/// labeled alternative in <see cref="LangCParser.rblock"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitFnBlockLine([NotNull] LangCParser.FnBlockLineContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>fnBodyLine</c>
	/// labeled alternative in <see cref="LangCParser.rbody"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitFnBodyLine([NotNull] LangCParser.FnBodyLineContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>fnBodyLineMore</c>
	/// labeled alternative in <see cref="LangCParser.rbody"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitFnBodyLineMore([NotNull] LangCParser.FnBodyLineMoreContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>fnReturnBoolLine</c>
	/// labeled alternative in <see cref="LangCParser.rbody"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitFnReturnBoolLine([NotNull] LangCParser.FnReturnBoolLineContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>fnReturnStrLine</c>
	/// labeled alternative in <see cref="LangCParser.rbody"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitFnReturnStrLine([NotNull] LangCParser.FnReturnStrLineContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>fnReturnExprLine</c>
	/// labeled alternative in <see cref="LangCParser.rbody"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitFnReturnExprLine([NotNull] LangCParser.FnReturnExprLineContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>fnReturnLine</c>
	/// labeled alternative in <see cref="LangCParser.rbody"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitFnReturnLine([NotNull] LangCParser.FnReturnLineContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>bexprNot</c>
	/// labeled alternative in <see cref="LangCParser.bexpr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitBexprNot([NotNull] LangCParser.BexprNotContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>bexprOr</c>
	/// labeled alternative in <see cref="LangCParser.bexpr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitBexprOr([NotNull] LangCParser.BexprOrContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>bexprExpr</c>
	/// labeled alternative in <see cref="LangCParser.bexpr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitBexprExpr([NotNull] LangCParser.BexprExprContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>bexprRelop</c>
	/// labeled alternative in <see cref="LangCParser.bexpr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitBexprRelop([NotNull] LangCParser.BexprRelopContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>bexprAnd</c>
	/// labeled alternative in <see cref="LangCParser.bexpr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitBexprAnd([NotNull] LangCParser.BexprAndContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>uniqueParam</c>
	/// labeled alternative in <see cref="LangCParser.params"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitUniqueParam([NotNull] LangCParser.UniqueParamContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>multipleParams</c>
	/// labeled alternative in <see cref="LangCParser.params"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitMultipleParams([NotNull] LangCParser.MultipleParamsContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>noneParam</c>
	/// labeled alternative in <see cref="LangCParser.params"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitNoneParam([NotNull] LangCParser.NoneParamContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>uniqueParamCall</c>
	/// labeled alternative in <see cref="LangCParser.paramsCall"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitUniqueParamCall([NotNull] LangCParser.UniqueParamCallContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>multipleParamCall</c>
	/// labeled alternative in <see cref="LangCParser.paramsCall"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitMultipleParamCall([NotNull] LangCParser.MultipleParamCallContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>noneParamCall</c>
	/// labeled alternative in <see cref="LangCParser.paramsCall"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitNoneParamCall([NotNull] LangCParser.NoneParamCallContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>funcInvoc</c>
	/// labeled alternative in <see cref="LangCParser.callFunction"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitFuncInvoc([NotNull] LangCParser.FuncInvocContext context);
}
